{"version":3,"sources":["util.js","components/Cart.js","components/Products.js","components/CartPayment.js","App.js","index.js"],"names":["formatCurreny","num","Number","toFixed","toLocaleString","Cart","cartItems","this","props","length","className","map","item","index","key","src","image","alt","name","onClick","cartUpdate","count","price","actual","Component","Products","products","product","href","formatCurrency","display","discount","addToCart","CartPayment","calculateTotal","reduce","a","c","calculateDiscount","calculatePrice","App","updateValue","state","slice","setState","filter","alreadyInCart","forEach","push","data","items","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2837049a.chunk.js","sourcesContent":["export default function formatCurreny(num){\n    return \"$ \" + Number(num.toFixed(1)).toLocaleString() + \" \"\n}","import React, { Component } from \"react\";\nimport formatCurreny from \"../util\";\n\nexport default class Cart extends Component {\n  render() {\n    const { cartItems } = this.props;\n    return (\n      <div>\n        <div>\n          {cartItems.length === 0 ? (\n            <div className=\"cart cart-header\">Cart is empty</div>\n          ) : (\n            <div className=\"cart cart-header\">\n              You have {cartItems.length} items in the cart{\" \"}\n            </div>\n          )}\n        </div>\n        {this.props.cartItems.length > 0 && (\n          <div className=\"cart\">\n            <div></div>\n            <ul className=\"cart-items\">\n              {cartItems.map((item, index) => (\n                <li key={index}>\n                  <div>\n                    <img src={item.image} alt={item.name}></img>\n                  </div>\n                  <div className=\"cart-details\">\n                    <div>{item.name}</div>\n                    <div className=\"cart-price\">\n                      <button\n                        className=\"right\"\n                        onClick={() => this.props.cartUpdate(item, -1)}\n                      >\n                        -\n                      </button>\n                      <div className=\"item-count\">{item.count}</div>\n                      <button\n                        className=\"right\"\n                        onClick={() => this.props.cartUpdate(item, 1)}\n                      >\n                        +\n                      </button>\n                      <div> X {formatCurreny(item.price.actual)}</div>\n                      <div className=\"item-total\">\n                        {formatCurreny(item.price.actual * item.count)}\n                      </div>\n                    </div>\n                  </div>{\" \"}\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport formatCurrency from \"../util\";\n\nexport default class Products extends Component {\n  \n  render() {\n    const { products } = this.props;\n    return (\n      <div className=\"products\">\n        {products.map((product, index) => (\n          <li key={index}>\n            <div className=\"product\">\n              <a href={\"#\" + index}>\n                <img src={product.image} alt={product.name} />\n                <p>{product.name}</p>\n              </a>\n              <div className=\"product-price\">\n                <div className=\"product-price-actual\">\n                  {formatCurrency(product.price.actual)}\n                </div>\n                <div className=\"product-price-display\">\n                  {formatCurrency(product.price.display)}\n                </div>\n\n                <div className=\"product-discount\">{product.discount} % Off</div>\n              </div>\n              <button\n                onClick={() => {\n                  this.props.addToCart(product);\n                }}\n                className=\"button primary\"\n              >\n                Add to Cart\n              </button>\n            </div>\n          </li>\n        ))}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport formatCurreny from \"../util\";\n\nexport default class CartPayment extends Component {\n\n    // Total price calculation\n  calculateTotal = (cartItems) => {\n    return formatCurreny(\n      cartItems.reduce((a, c) => a + c.price.display * c.count, 0)\n    );\n  };\n  // Total discount calculation\n  calculateDiscount = (cartItems) => {\n    return formatCurreny(\n      cartItems.reduce(\n        (a, c) => a + (c.price.display * c.count - c.price.actual * c.count),\n        0\n      )\n    );\n  };\n\n  // Actual price calculation\n  calculatePrice = (cartItems) => {\n    return formatCurreny(\n      cartItems.reduce((a, c) => a + c.price.actual * c.count, 0)\n    );\n  };\n  render() {\n    const { cartItems } = this.props;\n    return (\n      <div className=\"cart-payment\">\n        <div>\n          <div className=\"cart cart-header\">Price Details</div>\n        </div>\n        <div>\n          <ul className=\"cart-paymant-items\">\n            <li>\n              <div className=\"product-actrual\">\n                <div>\n                  {cartItems.reduce((a, c) => a + c.count, 0)} Total items :\n                </div>\n                {this.calculateTotal(cartItems)}\n              </div>\n\n              <div className=\"product-actrual\">\n                <div>Discount : </div>\n                {this.calculateDiscount(cartItems)}\n              </div>\n            </li>\n          </ul>\n          <div className=\"line\"></div>\n          <div className=\"product-total\">\n            <div>Order total :</div>\n            {this.calculatePrice(cartItems)}\n          </div>\n          <div className=\"cart-discount-item\">\n            You will save {this.calculateDiscount(cartItems)}\n            on this order{\" \"}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Cart from \"./components/Cart\";\nimport Products from \"./components/Products\";\nimport CartPayment from \"./components/CartPayment\";\nimport data from \"./data.json\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      products: data.items,\n      cartItems: [],\n    };\n  }\n\n  //Increase or decrease cart value\n  cartUpdate = (product, updateValue) => {\n    let cartItems = this.state.cartItems.slice();\n    if (product.count === 1 && updateValue === -1) {\n      this.setState({\n        cartItems: cartItems.filter((item) => item.name !== product.name),\n      });\n    } else {\n      cartItems.map((item) => {\n        if (item.name === product.name) {\n          item.count = item.count + updateValue;\n        }\n        return 1;\n      });\n      this.setState({ cartItems });\n    }\n  };\n\n  //Add to cart function\n  addToCart = (product) => {\n    const cartItems = this.state.cartItems.slice();\n    let alreadyInCart = false;\n    cartItems.forEach((item) => {\n      if (item.name === product.name) {\n        item.count++;\n        alreadyInCart = true;\n      }\n    });\n    if (!alreadyInCart) {\n      cartItems.push({ ...product, count: 1 });\n    }\n    this.setState({ cartItems });\n  };\n  render() {\n    return (\n      <div className=\"grid-container\">\n        <header className=\"App-header\">\n          <a href=\"/\">Cart Application</a>\n        </header>\n        <main>\n          <div className=\"content\">\n            <div className=\"main\">\n              <Products\n                products={this.state.products}\n                addToCart={this.addToCart}\n              />\n            </div>\n            <div className=\"sidebar\">\n              <Cart\n                cartItems={this.state.cartItems}\n                cartUpdate={this.cartUpdate}\n              />\n              {this.state.cartItems.length > 0 && (\n                <CartPayment cartItems={this.state.cartItems} />\n              )}\n            </div>\n          </div>\n        </main>\n        <footer>Thank you!</footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}